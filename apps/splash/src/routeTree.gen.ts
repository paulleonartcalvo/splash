/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OrganizationRouteRouteImport } from './routes/$organization/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as OrganizationIndexRouteImport } from './routes/$organization/index'
import { Route as OrganizationLocationIndexRouteImport } from './routes/$organization/$location/index'
import { Route as OrganizationLocationSessionsRouteImport } from './routes/$organization/$location/sessions'

const OrganizationRouteRoute = OrganizationRouteRouteImport.update({
  id: '/$organization',
  path: '/$organization',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizationIndexRoute = OrganizationIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrganizationRouteRoute,
} as any)
const OrganizationLocationIndexRoute =
  OrganizationLocationIndexRouteImport.update({
    id: '/$location/',
    path: '/$location/',
    getParentRoute: () => OrganizationRouteRoute,
  } as any)
const OrganizationLocationSessionsRoute =
  OrganizationLocationSessionsRouteImport.update({
    id: '/$location/sessions',
    path: '/$location/sessions',
    getParentRoute: () => OrganizationRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$organization': typeof OrganizationRouteRouteWithChildren
  '/$organization/': typeof OrganizationIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/$organization/$location/sessions': typeof OrganizationLocationSessionsRoute
  '/$organization/$location': typeof OrganizationLocationIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$organization': typeof OrganizationIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/$organization/$location/sessions': typeof OrganizationLocationSessionsRoute
  '/$organization/$location': typeof OrganizationLocationIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$organization': typeof OrganizationRouteRouteWithChildren
  '/$organization/': typeof OrganizationIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/$organization/$location/sessions': typeof OrganizationLocationSessionsRoute
  '/$organization/$location/': typeof OrganizationLocationIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$organization'
    | '/$organization/'
    | '/dashboard'
    | '/$organization/$location/sessions'
    | '/$organization/$location'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$organization'
    | '/dashboard'
    | '/$organization/$location/sessions'
    | '/$organization/$location'
  id:
    | '__root__'
    | '/'
    | '/$organization'
    | '/$organization/'
    | '/dashboard/'
    | '/$organization/$location/sessions'
    | '/$organization/$location/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrganizationRouteRoute: typeof OrganizationRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$organization': {
      id: '/$organization'
      path: '/$organization'
      fullPath: '/$organization'
      preLoaderRoute: typeof OrganizationRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$organization/': {
      id: '/$organization/'
      path: '/'
      fullPath: '/$organization/'
      preLoaderRoute: typeof OrganizationIndexRouteImport
      parentRoute: typeof OrganizationRouteRoute
    }
    '/$organization/$location/': {
      id: '/$organization/$location/'
      path: '/$location'
      fullPath: '/$organization/$location'
      preLoaderRoute: typeof OrganizationLocationIndexRouteImport
      parentRoute: typeof OrganizationRouteRoute
    }
    '/$organization/$location/sessions': {
      id: '/$organization/$location/sessions'
      path: '/$location/sessions'
      fullPath: '/$organization/$location/sessions'
      preLoaderRoute: typeof OrganizationLocationSessionsRouteImport
      parentRoute: typeof OrganizationRouteRoute
    }
  }
}

interface OrganizationRouteRouteChildren {
  OrganizationIndexRoute: typeof OrganizationIndexRoute
  OrganizationLocationSessionsRoute: typeof OrganizationLocationSessionsRoute
  OrganizationLocationIndexRoute: typeof OrganizationLocationIndexRoute
}

const OrganizationRouteRouteChildren: OrganizationRouteRouteChildren = {
  OrganizationIndexRoute: OrganizationIndexRoute,
  OrganizationLocationSessionsRoute: OrganizationLocationSessionsRoute,
  OrganizationLocationIndexRoute: OrganizationLocationIndexRoute,
}

const OrganizationRouteRouteWithChildren =
  OrganizationRouteRoute._addFileChildren(OrganizationRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrganizationRouteRoute: OrganizationRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
